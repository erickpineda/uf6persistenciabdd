/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Erick Pineda' at '15/03/16 17:25' with Gradle 2.9
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

sourceCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
	compile 'mysql:mysql-connector-java:5.1.38'
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task build(type: Jar, dependsOn: [':compileJava', ':processResources']) {
	from files(sourceSets.main.output.classesDir)
	from configurations.runtime.asFileTree.files.collect {zipTree(it)}
	from sourceSets.main.allSource
	classifier='sources'
	manifest {
		attributes 'Main-Class': 'net.erickpineda.traductorcolores.App'
	}
}
